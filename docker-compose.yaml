version: '3'

services:
  postgres:
    image: postgres:13
    container_name: smr_postgres
    restart: always
    environment: 
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
      POSTGRES_DB: strapi
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - smr-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U strapi"]
      interval: 10s
      timeout: 5s
      retries: 5

  strapi: 
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smr_strapi
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '1337:1337'
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: strapi
      DATABASE_USERNAME: strapi
      DATABASE_PASSWORD: strapi
      NODE_ENV: development
    volumes:
      - ./backend:/srv/app
      - /srv/app/node_modules
    networks:
      - smr-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smr_react
    ports:
      - '3000:3000'
    stdin_open: true
    restart: always
    depends_on:
      - strapi
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - smr-network
    environment:
      - REACT_APP_STRAPI_URL=http://localhost:1337

networks:
  smr-network:
    driver: bridge

volumes:
  pgdata: